server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: campus-guide
  
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/campus_guide?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DATABASE_USERNAME:campus_user}
    password: ${DATABASE_PASSWORD:campus_password}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 600000
      max-lifetime: 1800000
    
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
    
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:myProductionSecretKey123456789012345678901234567890}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours

# File Upload Configuration
file:
  upload:
    path: ${FILE_UPLOAD_PATH:/var/uploads/}
    max-size: ${FILE_MAX_SIZE:10485760} # 10MB

# Logging Configuration
logging:
  level:
    com.university.campusguide: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
    root: INFO
  pattern:
    file: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'
    console: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'
  file:
    name: ${LOG_FILE:/var/log/campus-guide/application.log}
  logback:
    rollingpolicy:
      max-file-size: 50MB
      max-history: 30
      total-size-cap: 1GB

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Cache Configuration
spring.cache:
  type: redis
  redis:
    time-to-live: 3600000 # 1 hour
    cache-null-values: false